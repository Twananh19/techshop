#!/bin/bash
# Script ki·ªÉm tra tr·∫°ng th√°i h·ªá th·ªëng TechShop

echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë   KI·ªÇM TRA TR·∫†NG TH√ÅI H·ªÜ TH·ªêNG TECHSHOP       ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo ""

cd "/home/twan/web advance/empty/techshop"

# 1. Check PHP Version
echo "üìå PHP Version:"
php -v | head -n 1
echo ""

# 2. Check Laravel Version
echo "üìå Laravel Version:"
php artisan --version
echo ""

# 3. Check Database Connection
echo "üìå Database Connection:"
if mysql -u laravel -plaravel123 techshop -e "SELECT 1;" >/dev/null 2>&1; then
    echo "   ‚úÖ Connected to MySQL/MariaDB"
    mysql -u laravel -plaravel123 techshop -e "SELECT COUNT(*) as total_users FROM users;" 2>/dev/null | tail -n 1 | awk '{print "   üë• Total Users: "$1}'
else
    echo "   ‚ùå KH√îNG TH·ªÇ K·∫æT N·ªêI DATABASE"
fi
echo ""

# 4. Check Migrations
echo "üìå Migrations Status:"
MIGRATIONS=$(php artisan migrate:status 2>/dev/null | grep -c "Ran")
echo "   ‚úÖ $MIGRATIONS migrations ƒë√£ ch·∫°y"
echo ""

# 5. Check Storage Link
echo "üìå Storage Link:"
if [ -L "public/storage" ]; then
    echo "   ‚úÖ Storage ƒë√£ ƒë∆∞·ª£c link"
else
    echo "   ‚ùå Storage ch∆∞a ƒë∆∞·ª£c link"
    echo "   Fix: php artisan storage:link"
fi
echo ""

# 6. Check Permissions
echo "üìå Permissions:"
if [ -w "storage" ] && [ -w "bootstrap/cache" ]; then
    echo "   ‚úÖ Storage & bootstrap/cache c√≥ quy·ªÅn ghi"
else
    echo "   ‚ö†Ô∏è  M·ªôt s·ªë th∆∞ m·ª•c kh√¥ng c√≥ quy·ªÅn ghi"
    echo "   Fix: chmod -R 775 storage bootstrap/cache"
fi
echo ""

# 7. Check Port 8000
echo "üìå Server Status:"
if lsof -ti:8000 >/dev/null 2>&1; then
    echo "   üü¢ Server ƒëang ch·∫°y tr√™n port 8000"
    echo "   üåê URL: http://127.0.0.1:8000"
else
    echo "   ‚ö™ Server ch∆∞a ch·∫°y"
    echo "   Start: bash start-server.sh"
fi
echo ""

# 8. Check .env
echo "üìå Environment Config:"
if [ -f ".env" ]; then
    echo "   ‚úÖ File .env t·ªìn t·∫°i"
    APP_ENV=$(grep "^APP_ENV=" .env | cut -d'=' -f2)
    APP_DEBUG=$(grep "^APP_DEBUG=" .env | cut -d'=' -f2)
    echo "   Environment: $APP_ENV"
    echo "   Debug Mode: $APP_DEBUG"
else
    echo "   ‚ùå File .env kh√¥ng t·ªìn t·∫°i"
fi
echo ""

# 9. Check Cache
echo "üìå Cache Status:"
if [ -d "bootstrap/cache/packages.php" ] || [ -d "bootstrap/cache/config.php" ]; then
    echo "   ‚ö†Ô∏è  Cache ƒëang t·ªìn t·∫°i"
    echo "   Clear: php artisan optimize:clear"
else
    echo "   ‚úÖ Kh√¥ng c√≥ cache"
fi
echo ""

# 10. Summary
echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë              T·ªîNG K·∫æT KI·ªÇM TRA                 ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo ""

ISSUES=0

# Count issues
if ! mysql -u laravel -plaravel123 techshop -e "SELECT 1;" >/dev/null 2>&1; then
    ((ISSUES++))
fi

if [ ! -L "public/storage" ]; then
    ((ISSUES++))
fi

if [ ! -w "storage" ] || [ ! -w "bootstrap/cache" ]; then
    ((ISSUES++))
fi

if [ ! -f ".env" ]; then
    ((ISSUES++))
fi

if [ $ISSUES -eq 0 ]; then
    echo "‚úÖ H·ªá th·ªëng ho·∫°t ƒë·ªông t·ªët!"
    echo "üöÄ S·∫µn s√†ng ch·∫°y server!"
    echo ""
    echo "Ch·∫°y l·ªánh: bash start-server.sh"
else
    echo "‚ö†Ô∏è  Ph√°t hi·ªán $ISSUES v·∫•n ƒë·ªÅ"
    echo "üìñ Xem h∆∞·ªõng d·∫´n fix t·∫°i: FIX_ERRORS.md"
fi

echo ""
